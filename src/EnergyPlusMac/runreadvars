#!/bin/bash
#====================================================================
# Runs ReadVarsEso
#
# This script needs the environment variable ENERGYPLUS_DIR to be
# set to the root directory of EnergyPlus, i.e., the directories are
# $ENERGYPLUS_DIR/bin, $ENERGYPLUS_DIR/lib, etc.
#
#
# July 26, 2002, MWetter@lbl.gov
# modified March 29, 2009, kyle.benne@nrel.gov
# Added support to find ENERGYPLUS_DIR if unset by user
#====================================================================

# function to set ENERGYPLUS_DIR relative to this script
function set_ep_dir () {
	U_DIR=`pwd`
	if [ -n "`readlink $0`" ]; then
		S_DIR=$(cd $(dirname $(readlink $0)); pwd)
		cd $U_DIR
	else
		S_DIR=$(cd $(dirname $0); pwd)
		cd $U_DIR
	fi
	ENERGYPLUS_DIR=`dirname $S_DIR`
}

# Set the ENERGYPLUS_DIR 
set_ep_dir

HEADER="=============== readvarseso ================="
# Name of executable
PRG_N=readvars
# Output files extension
OUT_EXT="csv"

# ==========================================================
function Usage()
{
    echo "Usage:  readvarseso FileName"
    echo "   or:  readvarseso --clean (or -c)"
    echo "   or:  readvarseso --help (or -h)"
    echo ""
    echo "Runs readvarseso for EnergyPlus post processing."
    echo ""
    echo "FileName is the name of the .rvi, .mvi, or .eso file,"
    echo "including file extension."
    echo ""
    echo " --clean, or -c    deletes all output files (*.csv) in"
    echo "                   the current directory"
    echo " --help, or -h     displays this help"
}
# ==========================================================
function CleanOutputFiles()
{
    # delete files
    for extension in $OUT_EXT out;
    do 
	rm -f *.$extension
    done

    echo "Deleted output files";
}
# ==========================================================
function ExitWithError()
{
    echo "===== readvarseso terminated with error ====="
    exit 1
}
# ==========================================================
if [ -z "$1"  ]; then
    Usage ; exit 0;
fi
if [ "$1" = "--help" ]; then
    Usage ; exit 0;
fi
if [ "$1" = "-h" ]; then
    Usage ; exit 0;
fi

# ==========================================================
if [ "$ENERGYPLUS_DIR" = "" ]; then
    echo "$HEADER";
    echo "To use readvarseso, you need to set the";
    echo "environment variable ENERGYPLUS_DIR to";
    echo "the root directory of EnergyPlus, i.e.,";
    echo "such that the directories are";
    echo "ENERGYPLUS_DIR/bin, ENERGYPLUS_DIR/lib, etc.";
    ExitWithError;
fi

# ==========================================================
# Clean output files only
if [ "$1" = --clean ]; then
    CleanOutputFiles ; exit 0;
fi
if [ "$1" = -c ]; then
    CleanOutputFiles ; exit 0;
fi


# ==========================================================
# check whether file exists
if [ ! -f $1 ]; then
  echo "$HEADER"
  echo "First argument is not a file."
  echo ""
  Usage
  ExitWithError
fi
# chech reading permission
if [ ! -r $1 ]; then
  echo "$HEADER"
  echo "Do not have reading permission for '$1'."
  echo ""
  Usage
  ExitWithError
fi

# ==========================================================
# Find out whether to process eso file or rvi/mvi file
EXT=${1##*.}
# check whether passed argument really has an extension
if [ $1 == $EXT ]; then
    echo "Argument must have a file extension."
    Usage ; ExitWithError ;
fi
BASE=`basename $1 .$EXT`

case $EXT in
    eso)
	if [ $BASE == eplusout ]; then
	    echo $HEADER
	    rm -f eplusout.csv
	    $ENERGYPLUS_DIR/bin/$PRG_N;
	else
	    echo $HEADER
	    rm -f eplusout.eso $BASE.csv eplusout.csv;
	    ln -s $1 eplusout.eso;
	    $ENERGYPLUS_DIR/bin/$PRG_N;
	    rm -f eplusout.eso;
	    mv -f eplusout.csv $BASE.csv;
	fi
	exit 0;
	;;
    rvi | mvi)
	echo $HEADER
	$ENERGYPLUS_DIR/bin/$PRG_N $1
	exit 0;
	;;*)
	Usage; ExitWithError;
esac


